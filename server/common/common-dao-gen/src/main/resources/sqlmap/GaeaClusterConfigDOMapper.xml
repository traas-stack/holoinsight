<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.holoinsight.server.common.dao.mapper.GaeaClusterConfigDOMapper">
  <resultMap id="BaseResultMap" type="io.holoinsight.server.common.dao.entity.GaeaClusterConfigDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="tenant" jdbcType="VARCHAR" property="tenant" />
    <result column="group" jdbcType="VARCHAR" property="group" />
    <result column="json" jdbcType="VARCHAR" property="json" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, tenant, `group`, json
  </sql>
  <select id="selectByExample" parameterType="io.holoinsight.server.common.dao.entity.GaeaClusterConfigDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gaea_cluster_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from gaea_cluster_config
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gaea_cluster_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from gaea_cluster_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gaea_cluster_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.holoinsight.server.common.dao.entity.GaeaClusterConfigDOExample">
    delete from gaea_cluster_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="io.holoinsight.server.common.dao.entity.GaeaClusterConfigDO" useGeneratedKeys="true">
    insert into gaea_cluster_config (gmt_create, gmt_modified, tenant, 
      `group`, json)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{tenant,jdbcType=VARCHAR}, 
      #{group,jdbcType=VARCHAR}, #{json,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
    insert into gaea_cluster_config
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.gmtCreate != null">
            gmt_create,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
          <if test="record.tenant != null">
            tenant,
          </if>
          <if test="record.group != null">
            `group`,
          </if>
          <if test="record.json != null">
            json,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.gmtCreate != null">
            #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tenant != null">
            #{record.tenant,jdbcType=VARCHAR},
          </if>
          <if test="record.group != null">
            #{record.group,jdbcType=VARCHAR},
          </if>
          <if test="record.json != null">
            #{record.json,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="io.holoinsight.server.common.dao.entity.GaeaClusterConfigDOExample" resultType="java.lang.Long">
    select count(*) from gaea_cluster_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gaea_cluster_config
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.gmtCreate != null">
            gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tenant != null">
            tenant = #{record.tenant,jdbcType=VARCHAR},
          </if>
          <if test="record.group != null">
            `group` = #{record.group,jdbcType=VARCHAR},
          </if>
          <if test="record.json != null">
            json = #{record.json,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gaea_cluster_config
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      tenant = #{record.tenant,jdbcType=VARCHAR},
      `group` = #{record.group,jdbcType=VARCHAR},
      json = #{record.json,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update gaea_cluster_config
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.gmtCreate != null">
            gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tenant != null">
            tenant = #{record.tenant,jdbcType=VARCHAR},
          </if>
          <if test="record.group != null">
            `group` = #{record.group,jdbcType=VARCHAR},
          </if>
          <if test="record.json != null">
            json = #{record.json,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.holoinsight.server.common.dao.entity.GaeaClusterConfigDO">
    update gaea_cluster_config
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      tenant = #{tenant,jdbcType=VARCHAR},
      `group` = #{group,jdbcType=VARCHAR},
      json = #{json,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="io.holoinsight.server.common.dao.entity.GaeaClusterConfigDOExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from gaea_cluster_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from gaea_cluster_config
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into gaea_cluster_config
    (gmt_create, gmt_modified, tenant, `group`, json)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.gmtCreate,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}, #{item.tenant,jdbcType=VARCHAR}, 
        #{item.group,jdbcType=VARCHAR}, #{item.json,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into gaea_cluster_config (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'gmt_create'.toString() == column.value">
          #{item.gmtCreate,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
        <if test="'tenant'.toString() == column.value">
          #{item.tenant,jdbcType=VARCHAR}
        </if>
        <if test="'group'.toString() == column.value">
          #{item.group,jdbcType=VARCHAR}
        </if>
        <if test="'json'.toString() == column.value">
          #{item.json,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
    insert into gaea_cluster_config
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.gmtCreate != null">
            gmt_create,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
          <if test="record.tenant != null">
            tenant,
          </if>
          <if test="record.group != null">
            `group`,
          </if>
          <if test="record.json != null">
            json,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.gmtCreate != null">
            #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tenant != null">
            #{record.tenant,jdbcType=VARCHAR},
          </if>
          <if test="record.group != null">
            #{record.group,jdbcType=VARCHAR},
          </if>
          <if test="record.json != null">
            #{record.json,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.gmtCreate != null">
            gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tenant != null">
            tenant = #{record.tenant,jdbcType=VARCHAR},
          </if>
          <if test="record.group != null">
            `group` = #{record.group,jdbcType=VARCHAR},
          </if>
          <if test="record.json != null">
            json = #{record.json,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="io.holoinsight.server.common.dao.entity.GaeaClusterConfigDO" useGeneratedKeys="true">
    insert into gaea_cluster_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      gmt_create,
      gmt_modified,
      tenant,
      `group`,
      json,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{gmtCreate,jdbcType=TIMESTAMP},
      #{gmtModified,jdbcType=TIMESTAMP},
      #{tenant,jdbcType=VARCHAR},
      #{group,jdbcType=VARCHAR},
      #{json,jdbcType=VARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      tenant = #{tenant,jdbcType=VARCHAR},
      `group` = #{group,jdbcType=VARCHAR},
      json = #{json,jdbcType=VARCHAR},
    </trim>
  </insert>
</mapper>