/*
 * Copyright 2022 Holoinsight Project Authors. Licensed under Apache-2.0.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package io.holoinsight.server.gateway.grpc.common;

public interface FileNodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.holoinsight.server.gateway.grpc.common.FileNode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 名字
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * 名字
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * 如果是目录, 则持有子文件
   * </pre>
   *
   * <code>repeated .io.holoinsight.server.gateway.grpc.common.FileNode children = 2;</code>
   */
  java.util.List<io.holoinsight.server.gateway.grpc.common.FileNode> 
      getChildrenList();
  /**
   * <pre>
   * 如果是目录, 则持有子文件
   * </pre>
   *
   * <code>repeated .io.holoinsight.server.gateway.grpc.common.FileNode children = 2;</code>
   */
  io.holoinsight.server.gateway.grpc.common.FileNode getChildren(int index);
  /**
   * <pre>
   * 如果是目录, 则持有子文件
   * </pre>
   *
   * <code>repeated .io.holoinsight.server.gateway.grpc.common.FileNode children = 2;</code>
   */
  int getChildrenCount();
  /**
   * <pre>
   * 如果是目录, 则持有子文件
   * </pre>
   *
   * <code>repeated .io.holoinsight.server.gateway.grpc.common.FileNode children = 2;</code>
   */
  java.util.List<? extends io.holoinsight.server.gateway.grpc.common.FileNodeOrBuilder> 
      getChildrenOrBuilderList();
  /**
   * <pre>
   * 如果是目录, 则持有子文件
   * </pre>
   *
   * <code>repeated .io.holoinsight.server.gateway.grpc.common.FileNode children = 2;</code>
   */
  io.holoinsight.server.gateway.grpc.common.FileNodeOrBuilder getChildrenOrBuilder(
      int index);

  /**
   * <pre>
   * 目标文件是否是目录
   * </pre>
   *
   * <code>bool dir = 3;</code>
   * @return The dir.
   */
  boolean getDir();

  /**
   * <pre>
   * 对 目标文件 做stat的结果
   * </pre>
   *
   * <code>.io.holoinsight.server.gateway.grpc.common.FileInfo stat = 4;</code>
   * @return Whether the stat field is set.
   */
  boolean hasStat();
  /**
   * <pre>
   * 对 目标文件 做stat的结果
   * </pre>
   *
   * <code>.io.holoinsight.server.gateway.grpc.common.FileInfo stat = 4;</code>
   * @return The stat.
   */
  io.holoinsight.server.gateway.grpc.common.FileInfo getStat();
  /**
   * <pre>
   * 对 目标文件 做stat的结果
   * </pre>
   *
   * <code>.io.holoinsight.server.gateway.grpc.common.FileInfo stat = 4;</code>
   */
  io.holoinsight.server.gateway.grpc.common.FileInfoOrBuilder getStatOrBuilder();

  /**
   * <pre>
   * 直接文件是否是一个symbol
   * </pre>
   *
   * <code>bool symbol = 5;</code>
   * @return The symbol.
   */
  boolean getSymbol();

  /**
   * <pre>
   * 对agent来说, 目标文件是否可读: 目标文件不存在/权限/目标文件不是常规类型
   * 对于dir, 该字段表示是否有权限list出该目录下的文件(即r权限)
   * 但如果dir缺少x权限的话会导致无法"进入目录", 会导致无法读该目录下的文件及其元信息 (只能读到子文件名, 无法读到子文件信息, 更无法读子文件)
   * </pre>
   *
   * <code>bool readable = 6;</code>
   * @return The readable.
   */
  boolean getReadable();

  /**
   * <pre>
   * 目标文件是否存在, 对于symbol该值可能是false, 意味着此时symbol指向一个不存在的文件
   * </pre>
   *
   * <code>bool exist = 7;</code>
   * @return The exist.
   */
  boolean getExist();
}
