
services:
  mysql:
    container_name: example-mysql-1
    image: ${mysql_image}
    environment:
      MYSQL_ROOT_PASSWORD: holoinsight
      MYSQL_USER: holoinsight
      MYSQL_PASSWORD: holoinsight
      MYSQL_DATABASE: holoinsight
    volumes:
    - ./my.cnf:/etc/mysql/conf.d/my.cnf
    restart: always
    healthcheck:
      test: mysql -uholoinsight -pholoinsight -Dholoinsight
      interval: 5s
      retries: 300
      timeout: 10s
  mongo:
    container_name: example-mongo-1
    image: ${mongo_image}
    environment:
      MONGO_INITDB_ROOT_USERNAME: holoinsight
      MONGO_INITDB_ROOT_PASSWORD: holoinsight
      MONGO_INITDB_DATABASE: holoinsight
    volumes:
    - ./init.js:/docker-entrypoint-initdb.d/init.js
    restart: always
    healthcheck:
      test: ["CMD", "timeout", "1", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/27017"]
      interval: 5s
      retries: 300
      timeout: 10s
  ceresdb:
    container_name: example-ceresdb-1
    image: ${ceresdb_image}
    volumes:
    - ./ceresdb_entrypoint.sh:/entrypoint.sh
    restart: always
    healthcheck:
      test: ["CMD", "timeout", "1", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/5440"]
      interval: 5s
      retries: 300
      timeout: 10s
  mysql-data-init:
    container_name: example-mysql-data-init-1
    image: ${mysql_image}
    links:
    - mysql
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
    - ./my.cnf:/etc/mysql/conf.d/my.cnf
    - ../../../server/extension/extension-common-flyway/src/main/resources/db/migration/V1__230301_INIT_DDL.sql:/sql/V1__230301_INIT_DDL.sql
    - ../../../server/extension/extension-common-flyway/src/main/resources/db/migration/V2__230301_Uniform_COLUMN.sql:/sql/V2__230301_Uniform_COLUMN.sql
    - ./data.sql:/sql/V999999__data.sql
    - ./init-db.sh:/init-db.sh
    - ./exec-sql-script.sh:/exec-sql-script.sh
    working_dir: /
    entrypoint:
    - /init-db.sh
  server:
    container_name: example-server-1
    hostname: holoinsight-server-example
    image: ${server_image}
    pull_policy: always
    healthcheck:
      test: ["CMD", "bash", "/home/admin/bin/health.sh"]
      interval: 1s
      retries: 300
    depends_on:
      mysql-data-init:
        condition: service_completed_successfully
      mongo:
        condition: service_healthy
      ceresdb:
        condition: service_healthy
    volumes:
    - ./application.yaml:/home/admin/application.yaml
    ports:
    - 8080:80
  agent-image:
    container_name: example-agent-image-1
    image: ${agent_image}
    pull_policy: always
    entrypoint: ["true"]
  finish:
    container_name: example-finish-1
    image: ${server_image}
    pull_policy: always
    depends_on:
      agent-image:
        condition: service_started
      server:
        condition: service_healthy
    entrypoint: [ "bash","-c", "echo 'holoinsight started successfully, visit http://YOUR_HOST_IP:8080'" ]
