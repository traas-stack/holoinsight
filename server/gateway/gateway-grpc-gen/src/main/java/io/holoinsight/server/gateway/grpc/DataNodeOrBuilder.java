/*
 * Copyright 2022 Holoinsight Project Authors. Licensed under Apache-2.0.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gateway-for-agent.proto

package io.holoinsight.server.gateway.grpc;

public interface DataNodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.holoinsight.server.gateway.grpc.DataNode)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 表示数据类型, 其实这里不存也行, 根据配置元数据理论是可以知道的
   * 比如约定:
   * 0 的话 value 就是聚合后的结果, count是聚合次数(可能没用)
   * 1 的话 value 表示聚合类型是avg, count是聚合次数, value是sum值, 此时用 sum/count 可以得到正确的avg, 方便做分布式avg计算
   * 2 的话 表示 bytes 是字符串, 需要根据具体业务语义进行解释
   * 3 的话 表示 bytes 是复杂的字节数据, 需要根据具体业务语义进行解释
   * </pre>
   *
   * <code>int32 type = 1;</code>
   * @return The type.
   */
  int getType();

  /**
   * <pre>
   * 聚合次数
   * </pre>
   *
   * <code>int32 count = 2;</code>
   * @return The count.
   */
  int getCount();

  /**
   * <pre>
   * 聚合的值, 根据情况可能是一个聚合结果, 或avg的sum值(此时需要与count配合使用)
   * </pre>
   *
   * <code>double value = 3;</code>
   * @return The value.
   */
  double getValue();

  /**
   * <pre>
   * 还能携带任意二进制数据, 字符串也可以使用这种方式存
   * </pre>
   *
   * <code>bytes bytes = 4;</code>
   * @return The bytes.
   */
  com.google.protobuf.ByteString getBytes();
}
